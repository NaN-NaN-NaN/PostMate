{
  "info": {
    "name": "PostMate API - Complete Workflow",
    "description": "Complete API workflow for PostMate document processing system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "document_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "analysis_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "reminder_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status is healthy\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql(\"healthy\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "2. Upload Images",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "files",
              "type": "file",
              "src": "/path/to/your/test_image.jpg"
            }
          ]
        },
        "url": {
          "raw": "{{base_url}}/api/v1/upload",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "upload"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Upload successful\", function () {",
              "    pm.response.to.have.status(201);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.document_id).to.exist;",
              "    pm.collectionVariables.set(\"document_id\", jsonData.document_id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "3. Check Document Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/documents/{{document_id}}/status",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "documents", "{{document_id}}", "status"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status retrieved\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.document_id).to.eql(pm.collectionVariables.get(\"document_id\"));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "4. Trigger OCR Processing",
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/documents/{{document_id}}/process_ocr",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "documents", "{{document_id}}", "process_ocr"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"OCR processing started\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.be.oneOf([\"processing\", \"already_completed\"]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "5. Poll OCR Status (wait 10s)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/documents/{{document_id}}/status",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "documents", "{{document_id}}", "status"]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "// Wait 10 seconds for OCR to complete",
              "setTimeout(function(){}, 10000);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "6. Get OCR Result",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/documents/{{document_id}}/ocr",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "documents", "{{document_id}}", "ocr"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"OCR result retrieved\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.ocr_text).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "7. Request Analysis",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"force_reanalyze\": false\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/analyze/{{document_id}}",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "analyze", "{{document_id}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Analysis started\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.analysis_id).to.exist;",
              "    pm.collectionVariables.set(\"analysis_id\", jsonData.analysis_id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "8. Poll Analysis Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/analyze/{{document_id}}/status",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "analyze", "{{document_id}}", "status"]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "// Wait 10 seconds for analysis",
              "setTimeout(function(){}, 10000);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "9. Get Analysis Result",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/analyze/{{document_id}}/result",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "analyze", "{{document_id}}", "result"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Analysis result retrieved\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.category).to.exist;",
              "    pm.expect(jsonData.summary).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "10. Chat - Ask Question",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"question\": \"What is the total amount?\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/chat/{{document_id}}",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "chat", "{{document_id}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Chat answer received\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.answer).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "11. Get Chat History",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/chat/{{document_id}}/history",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "chat", "{{document_id}}", "history"]
        }
      }
    },
    {
      "name": "12. Create Reminder",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"document_id\": \"{{document_id}}\",\n  \"title\": \"Review invoice payment\",\n  \"description\": \"Check if payment has been processed\",\n  \"reminder_date\": \"2024-12-31T10:00:00Z\",\n  \"notification_method\": \"email\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/reminders",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "reminders"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Reminder created\", function () {",
              "    pm.response.to.have.status(201);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.reminder_id).to.exist;",
              "    pm.collectionVariables.set(\"reminder_id\", jsonData.reminder_id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "13. List Reminders",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/reminders",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "reminders"]
        }
      }
    },
    {
      "name": "14. Get Calendar View",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/reminders/calendar",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "reminders", "calendar"]
        }
      }
    },
    {
      "name": "15. Search Documents",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/search?query=invoice&limit=10",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "search"],
          "query": [
            {
              "key": "query",
              "value": "invoice"
            },
            {
              "key": "limit",
              "value": "10"
            }
          ]
        }
      }
    },
    {
      "name": "16. Export to PDF",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"include_images\": true,\n  \"include_analysis\": true\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/documents/{{document_id}}/export/pdf",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "documents", "{{document_id}}", "export", "pdf"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"PDF exported\", function () {",
              "    pm.response.to.have.status(200);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.pdf_url).to.exist;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "17. Download PDF",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/documents/{{document_id}}/download?file_type=pdf",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "documents", "{{document_id}}", "download"],
          "query": [
            {
              "key": "file_type",
              "value": "pdf"
            }
          ]
        }
      }
    }
  ]
}
